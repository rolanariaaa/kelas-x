{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\restoran\\\\restoran-admin\\\\src\\\\components\\\\Customers.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { getCustomers, createCustomer, updateCustomer, deleteCustomer } from '../api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Customers = () => {\n  _s();\n  const [customers, setCustomers] = useState([]);\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [editingId, setEditingId] = useState(null);\n  useEffect(() => {\n    fetchCustomers();\n  }, []);\n  const fetchCustomers = async () => {\n    const data = await getCustomers();\n    setCustomers(data);\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (editingId) {\n      await updateCustomer(editingId, {\n        name,\n        email\n      });\n    } else {\n      await createCustomer({\n        name,\n        email\n      });\n    }\n    setName('');\n    setEmail('');\n    setEditingId(null);\n    fetchCustomers();\n  };\n  const handleEdit = customer => {\n    setName(customer.name);\n    setEmail(customer.email);\n    setEditingId(customer.id);\n  };\n  const handleDelete = async id => {\n    await deleteCustomer(id);\n    fetchCustomers();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Customers\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Name\",\n        value: name,\n        onChange: e => setName(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        placeholder: \"Email\",\n        value: email,\n        onChange: e => setEmail(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: [editingId ? 'Update' : 'Add', \" Customer\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: customers.map(customer => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [customer.name, \" - \", customer.email, /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleEdit(customer),\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleDelete(customer.id),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 25\n        }, this)]\n      }, customer.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n};\n_s(Customers, \"JK9O3yDutIfVTIJB7NF+va87K4A=\");\n_c = Customers;\nexport default Customers;\nvar _c;\n$RefreshReg$(_c, \"Customers\");","map":{"version":3,"names":["React","useEffect","useState","getCustomers","createCustomer","updateCustomer","deleteCustomer","jsxDEV","_jsxDEV","Customers","_s","customers","setCustomers","name","setName","email","setEmail","editingId","setEditingId","fetchCustomers","data","handleSubmit","e","preventDefault","handleEdit","customer","id","handleDelete","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","required","map","onClick","_c","$RefreshReg$"],"sources":["C:/xampp/htdocs/restoran/restoran-admin/src/components/Customers.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { getCustomers, createCustomer, updateCustomer, deleteCustomer } from '../api';\n\nconst Customers = () => {\n    const [customers, setCustomers] = useState([]);\n    const [name, setName] = useState('');\n    const [email, setEmail] = useState('');\n    const [editingId, setEditingId] = useState(null);\n\n    useEffect(() => {\n        fetchCustomers();\n    }, []);\n\n    const fetchCustomers = async () => {\n        const data = await getCustomers();\n        setCustomers(data);\n    };\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        if (editingId) {\n            await updateCustomer(editingId, { name, email });\n        } else {\n            await createCustomer({ name, email });\n        }\n        setName('');\n        setEmail('');\n        setEditingId(null);\n        fetchCustomers();\n    };\n\n    const handleEdit = (customer) => {\n        setName(customer.name);\n        setEmail(customer.email);\n        setEditingId(customer.id);\n    };\n\n    const handleDelete = async (id) => {\n        await deleteCustomer(id);\n        fetchCustomers();\n    };\n\n    return (\n        <div>\n            <h2>Customers</h2>\n            <form onSubmit={handleSubmit}>\n                <input\n                    type=\"text\"\n                    placeholder=\"Name\"\n                    value={name}\n                    onChange={(e) => setName(e.target.value)}\n                    required\n                />\n                <input\n                    type=\"email\"\n                    placeholder=\"Email\"\n                    value={email}\n                    onChange={(e) => setEmail(e.target.value)}\n                    required\n                />\n                <button type=\"submit\">{editingId ? 'Update' : 'Add'} Customer</button>\n            </form>\n            <ul>\n                {customers.map((customer) => (\n                    <li key={customer.id}>\n                        {customer.name} - {customer.email}\n                        <button onClick={() => handleEdit(customer)}>Edit</button>\n                        <button onClick={() => handleDelete(customer.id)}>Delete</button>\n                    </li>\n                ))}\n            </ul>\n        </div>\n    );\n};\n\nexport default Customers;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}